Grammar

    0 $accept: prm $end

    1 $@1: %empty

    2 prm: PROC MAIN LB RB BEGN COLON $@1 PROG_STATEMENTS END COLON

    3 PROG_STATEMENTS: PROG_STATEMENTS PROG_STATEMENT
    4                | %empty

    5 PROG_STATEMENT: VAR_DECL VAR_LIST COLON DATA_TYPE SC

    6 $@2: %empty

    7 $@3: %empty

    8 PROG_STATEMENT: VAR $@2 ASSIGNMENT $@3 A_EXPN SC
    9               | READ LB TO_READ RB SC

   10 $@4: %empty

   11 PROG_STATEMENT: WRITE LB $@4 TO_WRITE RB SC

   12 $@5: %empty

   13 PROG_STATEMENT: VAR_DECL VAR_LIST COLON ARRAY $@5 OF DATA_TYPE SC
   14               | IF_BLOCK ENDIF
   15               | IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK ENDIF

   16 $@6: %empty

   17 $@7: %empty

   18 PROG_STATEMENT: GOTO $@6 VAR $@7 SC

   19 $@8: %empty

   20 $@9: %empty

   21 PROG_STATEMENT: WHILE LB $@8 A_EXPN RB $@9 DO PROG_STATEMENTS ENDWHILE

   22 $@10: %empty

   23 $@11: %empty

   24 PROG_STATEMENT: REPEAT $@10 PROG_STATEMENTS UNTIL LB $@11 A_EXPN RB

   25 $@12: %empty

   26 $@13: %empty

   27 $@14: %empty

   28 $@15: %empty

   29 $@16: %empty

   30 $@17: %empty

   31 $@18: %empty

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR
   33               | VAR COLON
   34               | COMMENT

   35 $@19: %empty

   36 $@20: %empty

   37 IF_BLOCK: IF LB $@19 A_EXPN RB $@20 PROG_STATEMENTS

   38 ELSEIF_BLOCKS: ELSEIF_BLOCKS ELSEIF_BLOCK
   39              | %empty

   40 $@21: %empty

   41 $@22: %empty

   42 ELSEIF_BLOCK: ELSEIF $@21 A_EXPN RB $@22 PROG_STATEMENT

   43 $@23: %empty

   44 ELSE_BLOCK: ELSE $@23 PROG_STATEMENTS

   45 $@24: %empty

   46 TO_READ: VAR $@24 COMA TO_READ
   47        | VAR

   48 $@25: %empty

   49 TO_WRITE: TEXT $@25 COMA TO_WRITE

   50 $@26: %empty

   51 TO_WRITE: VAR $@26 TO_WRITE
   52         | TEXT
   53         | VAR

   54 VAR_LIST: VAR COMA VAR_LIST
   55         | VAR

   56 DATA_TYPE: INT
   57          | CHAR
   58          | FLOAT
   59          | DOUBLE

   60 $@27: %empty

   61 A_EXPN: A_EXPN PLUS $@27 A_EXPN

   62 $@28: %empty

   63 A_EXPN: A_EXPN MINUS $@28 A_EXPN

   64 $@29: %empty

   65 A_EXPN: A_EXPN MUL $@29 A_EXPN

   66 $@30: %empty

   67 A_EXPN: A_EXPN DIV $@30 A_EXPN

   68 $@31: %empty

   69 A_EXPN: A_EXPN MOD $@31 A_EXPN

   70 $@32: %empty

   71 A_EXPN: NOT $@32 A_EXPN

   72 $@33: %empty

   73 A_EXPN: A_EXPN LAND $@33 A_EXPN

   74 $@34: %empty

   75 A_EXPN: A_EXPN LOR $@34 A_EXPN

   76 $@35: %empty

   77 A_EXPN: A_EXPN LEQ $@35 A_EXPN

   78 $@36: %empty

   79 A_EXPN: A_EXPN GEQ $@36 A_EXPN

   80 $@37: %empty

   81 A_EXPN: A_EXPN GT $@37 A_EXPN

   82 $@38: %empty

   83 A_EXPN: A_EXPN LT $@38 A_EXPN

   84 $@39: %empty

   85 A_EXPN: A_EXPN DEQ $@39 A_EXPN

   86 $@40: %empty

   87 A_EXPN: A_EXPN NEQ $@40 A_EXPN
   88       | TERMINAL

   89 TERMINAL: VAR
   90         | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    COMMENT (258) 34
    PROC (259) 2
    MAIN (260) 2
    BEGN (261) 2
    COLON (262) 2 5 13 33
    END (263) 2
    VAR_DECL (264) 5 13
    INT <data_type> (265) 56
    CHAR <data_type> (266) 57
    FLOAT <data_type> (267) 58
    DOUBLE <data_type> (268) 59
    WRITE (269) 11
    READ (270) 9
    FOR (271) 32
    TO (272) 32
    OF (273) 13
    DO (274) 21 32
    ENDFOR (275) 32
    IF (276) 37
    ELSEIF (277) 42
    ELSE (278) 44
    ENDIF (279) 14 15
    GOTO (280) 18
    REPEAT (281) 24
    UNTIL (282) 24
    WHILE (283) 21
    ENDWHILE (284) 21
    ARROW (285) 32
    LB (286) 2 9 11 21 24 32 37
    RB (287) 2 9 11 21 24 32 37 42
    SC (288) 5 8 9 11 13 18
    COMA (289) 46 49 54
    ASSIGNMENT (290) 8
    LAND (291) 73
    LOR (292) 75
    GEQ (293) 79
    LEQ (294) 77
    GT (295) 81
    LT (296) 83
    NEQ (297) 87
    DEQ (298) 85
    PLUS (299) 61
    MINUS (300) 63
    MUL (301) 65
    DIV (302) 67
    MOD (303) 69
    NOT (304) 71
    TEXT <text> (305) 49 52
    VAR <var_name> (306) 8 18 32 33 46 47 51 53 54 55 89
    NUMBER <value> (307) 90
    ARRAY (308) 13


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    prm (55)
        on left: 2
        on right: 0
    $@1 (56)
        on left: 1
        on right: 2
    PROG_STATEMENTS (57)
        on left: 3 4
        on right: 2 3 21 24 32 37 44
    PROG_STATEMENT (58)
        on left: 5 8 9 11 13 14 15 18 21 24 32 33 34
        on right: 3 42
    $@2 (59)
        on left: 6
        on right: 8
    $@3 (60)
        on left: 7
        on right: 8
    $@4 (61)
        on left: 10
        on right: 11
    $@5 (62)
        on left: 12
        on right: 13
    $@6 (63)
        on left: 16
        on right: 18
    $@7 (64)
        on left: 17
        on right: 18
    $@8 (65)
        on left: 19
        on right: 21
    $@9 (66)
        on left: 20
        on right: 21
    $@10 (67)
        on left: 22
        on right: 24
    $@11 (68)
        on left: 23
        on right: 24
    $@12 (69)
        on left: 25
        on right: 32
    $@13 (70)
        on left: 26
        on right: 32
    $@14 (71)
        on left: 27
        on right: 32
    $@15 (72)
        on left: 28
        on right: 32
    $@16 (73)
        on left: 29
        on right: 32
    $@17 (74)
        on left: 30
        on right: 32
    $@18 (75)
        on left: 31
        on right: 32
    IF_BLOCK (76)
        on left: 37
        on right: 14 15
    $@19 (77)
        on left: 35
        on right: 37
    $@20 (78)
        on left: 36
        on right: 37
    ELSEIF_BLOCKS (79)
        on left: 38 39
        on right: 15 38
    ELSEIF_BLOCK (80)
        on left: 42
        on right: 38
    $@21 (81)
        on left: 40
        on right: 42
    $@22 (82)
        on left: 41
        on right: 42
    ELSE_BLOCK (83)
        on left: 44
        on right: 15
    $@23 (84)
        on left: 43
        on right: 44
    TO_READ (85)
        on left: 46 47
        on right: 9 46
    $@24 (86)
        on left: 45
        on right: 46
    TO_WRITE (87)
        on left: 49 51 52 53
        on right: 11 49 51
    $@25 (88)
        on left: 48
        on right: 49
    $@26 (89)
        on left: 50
        on right: 51
    VAR_LIST (90)
        on left: 54 55
        on right: 5 13 54
    DATA_TYPE <data_type> (91)
        on left: 56 57 58 59
        on right: 5 13
    A_EXPN (92)
        on left: 61 63 65 67 69 71 73 75 77 79 81 83 85 87 88
        on right: 8 21 24 32 37 42 61 63 65 67 69 71 73 75 77 79 81 83 85 87
    $@27 (93)
        on left: 60
        on right: 61
    $@28 (94)
        on left: 62
        on right: 63
    $@29 (95)
        on left: 64
        on right: 65
    $@30 (96)
        on left: 66
        on right: 67
    $@31 (97)
        on left: 68
        on right: 69
    $@32 (98)
        on left: 70
        on right: 71
    $@33 (99)
        on left: 72
        on right: 73
    $@34 (100)
        on left: 74
        on right: 75
    $@35 (101)
        on left: 76
        on right: 77
    $@36 (102)
        on left: 78
        on right: 79
    $@37 (103)
        on left: 80
        on right: 81
    $@38 (104)
        on left: 82
        on right: 83
    $@39 (105)
        on left: 84
        on right: 85
    $@40 (106)
        on left: 86
        on right: 87
    TERMINAL (107)
        on left: 89 90
        on right: 32 88


State 0

    0 $accept: . prm $end

    PROC  shift, and go to state 1

    prm  go to state 2


State 1

    2 prm: PROC . MAIN LB RB BEGN COLON $@1 PROG_STATEMENTS END COLON

    MAIN  shift, and go to state 3


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 4


State 3

    2 prm: PROC MAIN . LB RB BEGN COLON $@1 PROG_STATEMENTS END COLON

    LB  shift, and go to state 5


State 4

    0 $accept: prm $end .

    $default  accept


State 5

    2 prm: PROC MAIN LB . RB BEGN COLON $@1 PROG_STATEMENTS END COLON

    RB  shift, and go to state 6


State 6

    2 prm: PROC MAIN LB RB . BEGN COLON $@1 PROG_STATEMENTS END COLON

    BEGN  shift, and go to state 7


State 7

    2 prm: PROC MAIN LB RB BEGN . COLON $@1 PROG_STATEMENTS END COLON

    COLON  shift, and go to state 8


State 8

    2 prm: PROC MAIN LB RB BEGN COLON . $@1 PROG_STATEMENTS END COLON

    $default  reduce using rule 1 ($@1)

    $@1  go to state 9


State 9

    2 prm: PROC MAIN LB RB BEGN COLON $@1 . PROG_STATEMENTS END COLON

    $default  reduce using rule 4 (PROG_STATEMENTS)

    PROG_STATEMENTS  go to state 10


State 10

    2 prm: PROC MAIN LB RB BEGN COLON $@1 PROG_STATEMENTS . END COLON
    3 PROG_STATEMENTS: PROG_STATEMENTS . PROG_STATEMENT

    COMMENT   shift, and go to state 11
    END       shift, and go to state 12
    VAR_DECL  shift, and go to state 13
    WRITE     shift, and go to state 14
    READ      shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    GOTO      shift, and go to state 18
    REPEAT    shift, and go to state 19
    WHILE     shift, and go to state 20
    VAR       shift, and go to state 21

    PROG_STATEMENT  go to state 22
    IF_BLOCK        go to state 23


State 11

   34 PROG_STATEMENT: COMMENT .

    $default  reduce using rule 34 (PROG_STATEMENT)


State 12

    2 prm: PROC MAIN LB RB BEGN COLON $@1 PROG_STATEMENTS END . COLON

    COLON  shift, and go to state 24


State 13

    5 PROG_STATEMENT: VAR_DECL . VAR_LIST COLON DATA_TYPE SC
   13               | VAR_DECL . VAR_LIST COLON ARRAY $@5 OF DATA_TYPE SC

    VAR  shift, and go to state 25

    VAR_LIST  go to state 26


State 14

   11 PROG_STATEMENT: WRITE . LB $@4 TO_WRITE RB SC

    LB  shift, and go to state 27


State 15

    9 PROG_STATEMENT: READ . LB TO_READ RB SC

    LB  shift, and go to state 28


State 16

   32 PROG_STATEMENT: FOR . LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    LB  shift, and go to state 29


State 17

   37 IF_BLOCK: IF . LB $@19 A_EXPN RB $@20 PROG_STATEMENTS

    LB  shift, and go to state 30


State 18

   18 PROG_STATEMENT: GOTO . $@6 VAR $@7 SC

    $default  reduce using rule 16 ($@6)

    $@6  go to state 31


State 19

   24 PROG_STATEMENT: REPEAT . $@10 PROG_STATEMENTS UNTIL LB $@11 A_EXPN RB

    $default  reduce using rule 22 ($@10)

    $@10  go to state 32


State 20

   21 PROG_STATEMENT: WHILE . LB $@8 A_EXPN RB $@9 DO PROG_STATEMENTS ENDWHILE

    LB  shift, and go to state 33


State 21

    8 PROG_STATEMENT: VAR . $@2 ASSIGNMENT $@3 A_EXPN SC
   33               | VAR . COLON

    COLON  shift, and go to state 34

    $default  reduce using rule 6 ($@2)

    $@2  go to state 35


State 22

    3 PROG_STATEMENTS: PROG_STATEMENTS PROG_STATEMENT .

    $default  reduce using rule 3 (PROG_STATEMENTS)


State 23

   14 PROG_STATEMENT: IF_BLOCK . ENDIF
   15               | IF_BLOCK . ELSEIF_BLOCKS ELSE_BLOCK ENDIF

    ENDIF  shift, and go to state 36

    $default  reduce using rule 39 (ELSEIF_BLOCKS)

    ELSEIF_BLOCKS  go to state 37


State 24

    2 prm: PROC MAIN LB RB BEGN COLON $@1 PROG_STATEMENTS END COLON .

    $default  reduce using rule 2 (prm)


State 25

   54 VAR_LIST: VAR . COMA VAR_LIST
   55         | VAR .

    COMA  shift, and go to state 38

    $default  reduce using rule 55 (VAR_LIST)


State 26

    5 PROG_STATEMENT: VAR_DECL VAR_LIST . COLON DATA_TYPE SC
   13               | VAR_DECL VAR_LIST . COLON ARRAY $@5 OF DATA_TYPE SC

    COLON  shift, and go to state 39


State 27

   11 PROG_STATEMENT: WRITE LB . $@4 TO_WRITE RB SC

    $default  reduce using rule 10 ($@4)

    $@4  go to state 40


State 28

    9 PROG_STATEMENT: READ LB . TO_READ RB SC

    VAR  shift, and go to state 41

    TO_READ  go to state 42


State 29

   32 PROG_STATEMENT: FOR LB . $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    $default  reduce using rule 25 ($@12)

    $@12  go to state 43


State 30

   37 IF_BLOCK: IF LB . $@19 A_EXPN RB $@20 PROG_STATEMENTS

    $default  reduce using rule 35 ($@19)

    $@19  go to state 44


State 31

   18 PROG_STATEMENT: GOTO $@6 . VAR $@7 SC

    VAR  shift, and go to state 45


State 32

   24 PROG_STATEMENT: REPEAT $@10 . PROG_STATEMENTS UNTIL LB $@11 A_EXPN RB

    $default  reduce using rule 4 (PROG_STATEMENTS)

    PROG_STATEMENTS  go to state 46


State 33

   21 PROG_STATEMENT: WHILE LB . $@8 A_EXPN RB $@9 DO PROG_STATEMENTS ENDWHILE

    $default  reduce using rule 19 ($@8)

    $@8  go to state 47


State 34

   33 PROG_STATEMENT: VAR COLON .

    $default  reduce using rule 33 (PROG_STATEMENT)


State 35

    8 PROG_STATEMENT: VAR $@2 . ASSIGNMENT $@3 A_EXPN SC

    ASSIGNMENT  shift, and go to state 48


State 36

   14 PROG_STATEMENT: IF_BLOCK ENDIF .

    $default  reduce using rule 14 (PROG_STATEMENT)


State 37

   15 PROG_STATEMENT: IF_BLOCK ELSEIF_BLOCKS . ELSE_BLOCK ENDIF
   38 ELSEIF_BLOCKS: ELSEIF_BLOCKS . ELSEIF_BLOCK

    ELSEIF  shift, and go to state 49
    ELSE    shift, and go to state 50

    ELSEIF_BLOCK  go to state 51
    ELSE_BLOCK    go to state 52


State 38

   54 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 25

    VAR_LIST  go to state 53


State 39

    5 PROG_STATEMENT: VAR_DECL VAR_LIST COLON . DATA_TYPE SC
   13               | VAR_DECL VAR_LIST COLON . ARRAY $@5 OF DATA_TYPE SC

    INT     shift, and go to state 54
    CHAR    shift, and go to state 55
    FLOAT   shift, and go to state 56
    DOUBLE  shift, and go to state 57
    ARRAY   shift, and go to state 58

    DATA_TYPE  go to state 59


State 40

   11 PROG_STATEMENT: WRITE LB $@4 . TO_WRITE RB SC

    TEXT  shift, and go to state 60
    VAR   shift, and go to state 61

    TO_WRITE  go to state 62


State 41

   46 TO_READ: VAR . $@24 COMA TO_READ
   47        | VAR .

    RB        reduce using rule 47 (TO_READ)
    $default  reduce using rule 45 ($@24)

    $@24  go to state 63


State 42

    9 PROG_STATEMENT: READ LB TO_READ . RB SC

    RB  shift, and go to state 64


State 43

   32 PROG_STATEMENT: FOR LB $@12 . VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    VAR  shift, and go to state 65


State 44

   37 IF_BLOCK: IF LB $@19 . A_EXPN RB $@20 PROG_STATEMENTS

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 69
    TERMINAL  go to state 70


State 45

   18 PROG_STATEMENT: GOTO $@6 VAR . $@7 SC

    $default  reduce using rule 17 ($@7)

    $@7  go to state 71


State 46

    3 PROG_STATEMENTS: PROG_STATEMENTS . PROG_STATEMENT
   24 PROG_STATEMENT: REPEAT $@10 PROG_STATEMENTS . UNTIL LB $@11 A_EXPN RB

    COMMENT   shift, and go to state 11
    VAR_DECL  shift, and go to state 13
    WRITE     shift, and go to state 14
    READ      shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    GOTO      shift, and go to state 18
    REPEAT    shift, and go to state 19
    UNTIL     shift, and go to state 72
    WHILE     shift, and go to state 20
    VAR       shift, and go to state 21

    PROG_STATEMENT  go to state 22
    IF_BLOCK        go to state 23


State 47

   21 PROG_STATEMENT: WHILE LB $@8 . A_EXPN RB $@9 DO PROG_STATEMENTS ENDWHILE

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 73
    TERMINAL  go to state 70


State 48

    8 PROG_STATEMENT: VAR $@2 ASSIGNMENT . $@3 A_EXPN SC

    $default  reduce using rule 7 ($@3)

    $@3  go to state 74


State 49

   42 ELSEIF_BLOCK: ELSEIF . $@21 A_EXPN RB $@22 PROG_STATEMENT

    $default  reduce using rule 40 ($@21)

    $@21  go to state 75


State 50

   44 ELSE_BLOCK: ELSE . $@23 PROG_STATEMENTS

    $default  reduce using rule 43 ($@23)

    $@23  go to state 76


State 51

   38 ELSEIF_BLOCKS: ELSEIF_BLOCKS ELSEIF_BLOCK .

    $default  reduce using rule 38 (ELSEIF_BLOCKS)


State 52

   15 PROG_STATEMENT: IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK . ENDIF

    ENDIF  shift, and go to state 77


State 53

   54 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 54 (VAR_LIST)


State 54

   56 DATA_TYPE: INT .

    $default  reduce using rule 56 (DATA_TYPE)


State 55

   57 DATA_TYPE: CHAR .

    $default  reduce using rule 57 (DATA_TYPE)


State 56

   58 DATA_TYPE: FLOAT .

    $default  reduce using rule 58 (DATA_TYPE)


State 57

   59 DATA_TYPE: DOUBLE .

    $default  reduce using rule 59 (DATA_TYPE)


State 58

   13 PROG_STATEMENT: VAR_DECL VAR_LIST COLON ARRAY . $@5 OF DATA_TYPE SC

    $default  reduce using rule 12 ($@5)

    $@5  go to state 78


State 59

    5 PROG_STATEMENT: VAR_DECL VAR_LIST COLON DATA_TYPE . SC

    SC  shift, and go to state 79


State 60

   49 TO_WRITE: TEXT . $@25 COMA TO_WRITE
   52         | TEXT .

    RB        reduce using rule 52 (TO_WRITE)
    $default  reduce using rule 48 ($@25)

    $@25  go to state 80


State 61

   51 TO_WRITE: VAR . $@26 TO_WRITE
   53         | VAR .

    RB        reduce using rule 53 (TO_WRITE)
    $default  reduce using rule 50 ($@26)

    $@26  go to state 81


State 62

   11 PROG_STATEMENT: WRITE LB $@4 TO_WRITE . RB SC

    RB  shift, and go to state 82


State 63

   46 TO_READ: VAR $@24 . COMA TO_READ

    COMA  shift, and go to state 83


State 64

    9 PROG_STATEMENT: READ LB TO_READ RB . SC

    SC  shift, and go to state 84


State 65

   32 PROG_STATEMENT: FOR LB $@12 VAR . $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    $default  reduce using rule 26 ($@13)

    $@13  go to state 85


State 66

   71 A_EXPN: NOT . $@32 A_EXPN

    $default  reduce using rule 70 ($@32)

    $@32  go to state 86


State 67

   89 TERMINAL: VAR .

    $default  reduce using rule 89 (TERMINAL)


State 68

   90 TERMINAL: NUMBER .

    $default  reduce using rule 90 (TERMINAL)


State 69

   37 IF_BLOCK: IF LB $@19 A_EXPN . RB $@20 PROG_STATEMENTS
   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    RB     shift, and go to state 87
    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    GEQ    shift, and go to state 90
    LEQ    shift, and go to state 91
    GT     shift, and go to state 92
    LT     shift, and go to state 93
    NEQ    shift, and go to state 94
    DEQ    shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MUL    shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 70

   88 A_EXPN: TERMINAL .

    $default  reduce using rule 88 (A_EXPN)


State 71

   18 PROG_STATEMENT: GOTO $@6 VAR $@7 . SC

    SC  shift, and go to state 101


State 72

   24 PROG_STATEMENT: REPEAT $@10 PROG_STATEMENTS UNTIL . LB $@11 A_EXPN RB

    LB  shift, and go to state 102


State 73

   21 PROG_STATEMENT: WHILE LB $@8 A_EXPN . RB $@9 DO PROG_STATEMENTS ENDWHILE
   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    RB     shift, and go to state 103
    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    GEQ    shift, and go to state 90
    LEQ    shift, and go to state 91
    GT     shift, and go to state 92
    LT     shift, and go to state 93
    NEQ    shift, and go to state 94
    DEQ    shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MUL    shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 74

    8 PROG_STATEMENT: VAR $@2 ASSIGNMENT $@3 . A_EXPN SC

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 104
    TERMINAL  go to state 70


State 75

   42 ELSEIF_BLOCK: ELSEIF $@21 . A_EXPN RB $@22 PROG_STATEMENT

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 105
    TERMINAL  go to state 70


State 76

   44 ELSE_BLOCK: ELSE $@23 . PROG_STATEMENTS

    $default  reduce using rule 4 (PROG_STATEMENTS)

    PROG_STATEMENTS  go to state 106


State 77

   15 PROG_STATEMENT: IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK ENDIF .

    $default  reduce using rule 15 (PROG_STATEMENT)


State 78

   13 PROG_STATEMENT: VAR_DECL VAR_LIST COLON ARRAY $@5 . OF DATA_TYPE SC

    OF  shift, and go to state 107


State 79

    5 PROG_STATEMENT: VAR_DECL VAR_LIST COLON DATA_TYPE SC .

    $default  reduce using rule 5 (PROG_STATEMENT)


State 80

   49 TO_WRITE: TEXT $@25 . COMA TO_WRITE

    COMA  shift, and go to state 108


State 81

   51 TO_WRITE: VAR $@26 . TO_WRITE

    TEXT  shift, and go to state 60
    VAR   shift, and go to state 61

    TO_WRITE  go to state 109


State 82

   11 PROG_STATEMENT: WRITE LB $@4 TO_WRITE RB . SC

    SC  shift, and go to state 110


State 83

   46 TO_READ: VAR $@24 COMA . TO_READ

    VAR  shift, and go to state 41

    TO_READ  go to state 111


State 84

    9 PROG_STATEMENT: READ LB TO_READ RB SC .

    $default  reduce using rule 9 (PROG_STATEMENT)


State 85

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 . ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    ARROW  shift, and go to state 112


State 86

   71 A_EXPN: NOT $@32 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 113
    TERMINAL  go to state 70


State 87

   37 IF_BLOCK: IF LB $@19 A_EXPN RB . $@20 PROG_STATEMENTS

    $default  reduce using rule 36 ($@20)

    $@20  go to state 114


State 88

   73 A_EXPN: A_EXPN LAND . $@33 A_EXPN

    $default  reduce using rule 72 ($@33)

    $@33  go to state 115


State 89

   75 A_EXPN: A_EXPN LOR . $@34 A_EXPN

    $default  reduce using rule 74 ($@34)

    $@34  go to state 116


State 90

   79 A_EXPN: A_EXPN GEQ . $@36 A_EXPN

    $default  reduce using rule 78 ($@36)

    $@36  go to state 117


State 91

   77 A_EXPN: A_EXPN LEQ . $@35 A_EXPN

    $default  reduce using rule 76 ($@35)

    $@35  go to state 118


State 92

   81 A_EXPN: A_EXPN GT . $@37 A_EXPN

    $default  reduce using rule 80 ($@37)

    $@37  go to state 119


State 93

   83 A_EXPN: A_EXPN LT . $@38 A_EXPN

    $default  reduce using rule 82 ($@38)

    $@38  go to state 120


State 94

   87 A_EXPN: A_EXPN NEQ . $@40 A_EXPN

    $default  reduce using rule 86 ($@40)

    $@40  go to state 121


State 95

   85 A_EXPN: A_EXPN DEQ . $@39 A_EXPN

    $default  reduce using rule 84 ($@39)

    $@39  go to state 122


State 96

   61 A_EXPN: A_EXPN PLUS . $@27 A_EXPN

    $default  reduce using rule 60 ($@27)

    $@27  go to state 123


State 97

   63 A_EXPN: A_EXPN MINUS . $@28 A_EXPN

    $default  reduce using rule 62 ($@28)

    $@28  go to state 124


State 98

   65 A_EXPN: A_EXPN MUL . $@29 A_EXPN

    $default  reduce using rule 64 ($@29)

    $@29  go to state 125


State 99

   67 A_EXPN: A_EXPN DIV . $@30 A_EXPN

    $default  reduce using rule 66 ($@30)

    $@30  go to state 126


State 100

   69 A_EXPN: A_EXPN MOD . $@31 A_EXPN

    $default  reduce using rule 68 ($@31)

    $@31  go to state 127


State 101

   18 PROG_STATEMENT: GOTO $@6 VAR $@7 SC .

    $default  reduce using rule 18 (PROG_STATEMENT)


State 102

   24 PROG_STATEMENT: REPEAT $@10 PROG_STATEMENTS UNTIL LB . $@11 A_EXPN RB

    $default  reduce using rule 23 ($@11)

    $@11  go to state 128


State 103

   21 PROG_STATEMENT: WHILE LB $@8 A_EXPN RB . $@9 DO PROG_STATEMENTS ENDWHILE

    $default  reduce using rule 20 ($@9)

    $@9  go to state 129


State 104

    8 PROG_STATEMENT: VAR $@2 ASSIGNMENT $@3 A_EXPN . SC
   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    SC     shift, and go to state 130
    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    GEQ    shift, and go to state 90
    LEQ    shift, and go to state 91
    GT     shift, and go to state 92
    LT     shift, and go to state 93
    NEQ    shift, and go to state 94
    DEQ    shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MUL    shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 105

   42 ELSEIF_BLOCK: ELSEIF $@21 A_EXPN . RB $@22 PROG_STATEMENT
   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    RB     shift, and go to state 131
    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    GEQ    shift, and go to state 90
    LEQ    shift, and go to state 91
    GT     shift, and go to state 92
    LT     shift, and go to state 93
    NEQ    shift, and go to state 94
    DEQ    shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MUL    shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 106

    3 PROG_STATEMENTS: PROG_STATEMENTS . PROG_STATEMENT
   44 ELSE_BLOCK: ELSE $@23 PROG_STATEMENTS .

    COMMENT   shift, and go to state 11
    VAR_DECL  shift, and go to state 13
    WRITE     shift, and go to state 14
    READ      shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    GOTO      shift, and go to state 18
    REPEAT    shift, and go to state 19
    WHILE     shift, and go to state 20
    VAR       shift, and go to state 21

    $default  reduce using rule 44 (ELSE_BLOCK)

    PROG_STATEMENT  go to state 22
    IF_BLOCK        go to state 23


State 107

   13 PROG_STATEMENT: VAR_DECL VAR_LIST COLON ARRAY $@5 OF . DATA_TYPE SC

    INT     shift, and go to state 54
    CHAR    shift, and go to state 55
    FLOAT   shift, and go to state 56
    DOUBLE  shift, and go to state 57

    DATA_TYPE  go to state 132


State 108

   49 TO_WRITE: TEXT $@25 COMA . TO_WRITE

    TEXT  shift, and go to state 60
    VAR   shift, and go to state 61

    TO_WRITE  go to state 133


State 109

   51 TO_WRITE: VAR $@26 TO_WRITE .

    $default  reduce using rule 51 (TO_WRITE)


State 110

   11 PROG_STATEMENT: WRITE LB $@4 TO_WRITE RB SC .

    $default  reduce using rule 11 (PROG_STATEMENT)


State 111

   46 TO_READ: VAR $@24 COMA TO_READ .

    $default  reduce using rule 46 (TO_READ)


State 112

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW . $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    $default  reduce using rule 27 ($@14)

    $@14  go to state 134


State 113

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   71       | NOT $@32 A_EXPN .
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 71 (A_EXPN)


State 114

   37 IF_BLOCK: IF LB $@19 A_EXPN RB $@20 . PROG_STATEMENTS

    $default  reduce using rule 4 (PROG_STATEMENTS)

    PROG_STATEMENTS  go to state 135


State 115

   73 A_EXPN: A_EXPN LAND $@33 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 136
    TERMINAL  go to state 70


State 116

   75 A_EXPN: A_EXPN LOR $@34 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 137
    TERMINAL  go to state 70


State 117

   79 A_EXPN: A_EXPN GEQ $@36 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 138
    TERMINAL  go to state 70


State 118

   77 A_EXPN: A_EXPN LEQ $@35 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 139
    TERMINAL  go to state 70


State 119

   81 A_EXPN: A_EXPN GT $@37 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 140
    TERMINAL  go to state 70


State 120

   83 A_EXPN: A_EXPN LT $@38 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 141
    TERMINAL  go to state 70


State 121

   87 A_EXPN: A_EXPN NEQ $@40 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 142
    TERMINAL  go to state 70


State 122

   85 A_EXPN: A_EXPN DEQ $@39 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 143
    TERMINAL  go to state 70


State 123

   61 A_EXPN: A_EXPN PLUS $@27 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 144
    TERMINAL  go to state 70


State 124

   63 A_EXPN: A_EXPN MINUS $@28 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 145
    TERMINAL  go to state 70


State 125

   65 A_EXPN: A_EXPN MUL $@29 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 146
    TERMINAL  go to state 70


State 126

   67 A_EXPN: A_EXPN DIV $@30 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 147
    TERMINAL  go to state 70


State 127

   69 A_EXPN: A_EXPN MOD $@31 . A_EXPN

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 148
    TERMINAL  go to state 70


State 128

   24 PROG_STATEMENT: REPEAT $@10 PROG_STATEMENTS UNTIL LB $@11 . A_EXPN RB

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 149
    TERMINAL  go to state 70


State 129

   21 PROG_STATEMENT: WHILE LB $@8 A_EXPN RB $@9 . DO PROG_STATEMENTS ENDWHILE

    DO  shift, and go to state 150


State 130

    8 PROG_STATEMENT: VAR $@2 ASSIGNMENT $@3 A_EXPN SC .

    $default  reduce using rule 8 (PROG_STATEMENT)


State 131

   42 ELSEIF_BLOCK: ELSEIF $@21 A_EXPN RB . $@22 PROG_STATEMENT

    $default  reduce using rule 41 ($@22)

    $@22  go to state 151


State 132

   13 PROG_STATEMENT: VAR_DECL VAR_LIST COLON ARRAY $@5 OF DATA_TYPE . SC

    SC  shift, and go to state 152


State 133

   49 TO_WRITE: TEXT $@25 COMA TO_WRITE .

    $default  reduce using rule 49 (TO_WRITE)


State 134

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 . TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    TERMINAL  go to state 153


State 135

    3 PROG_STATEMENTS: PROG_STATEMENTS . PROG_STATEMENT
   37 IF_BLOCK: IF LB $@19 A_EXPN RB $@20 PROG_STATEMENTS .

    COMMENT   shift, and go to state 11
    VAR_DECL  shift, and go to state 13
    WRITE     shift, and go to state 14
    READ      shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    GOTO      shift, and go to state 18
    REPEAT    shift, and go to state 19
    WHILE     shift, and go to state 20
    VAR       shift, and go to state 21

    $default  reduce using rule 37 (IF_BLOCK)

    PROG_STATEMENT  go to state 22
    IF_BLOCK        go to state 23


State 136

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   73       | A_EXPN LAND $@33 A_EXPN .
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 73 (A_EXPN)


State 137

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   75       | A_EXPN LOR $@34 A_EXPN .
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 75 (A_EXPN)


State 138

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   79       | A_EXPN GEQ $@36 A_EXPN .
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 79 (A_EXPN)


State 139

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   77       | A_EXPN LEQ $@35 A_EXPN .
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 77 (A_EXPN)


State 140

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   81       | A_EXPN GT $@37 A_EXPN .
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 81 (A_EXPN)


State 141

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   83       | A_EXPN LT $@38 A_EXPN .
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 83 (A_EXPN)


State 142

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN
   87       | A_EXPN NEQ $@40 A_EXPN .

    $default  reduce using rule 87 (A_EXPN)


State 143

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   85       | A_EXPN DEQ $@39 A_EXPN .
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 85 (A_EXPN)


State 144

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   61       | A_EXPN PLUS $@27 A_EXPN .
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 61 (A_EXPN)


State 145

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   63       | A_EXPN MINUS $@28 A_EXPN .
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 63 (A_EXPN)


State 146

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   65       | A_EXPN MUL $@29 A_EXPN .
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 65 (A_EXPN)


State 147

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   67       | A_EXPN DIV $@30 A_EXPN .
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 67 (A_EXPN)


State 148

   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   69       | A_EXPN MOD $@31 A_EXPN .
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    $default  reduce using rule 69 (A_EXPN)


State 149

   24 PROG_STATEMENT: REPEAT $@10 PROG_STATEMENTS UNTIL LB $@11 A_EXPN . RB
   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    RB     shift, and go to state 154
    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    GEQ    shift, and go to state 90
    LEQ    shift, and go to state 91
    GT     shift, and go to state 92
    LT     shift, and go to state 93
    NEQ    shift, and go to state 94
    DEQ    shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MUL    shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 150

   21 PROG_STATEMENT: WHILE LB $@8 A_EXPN RB $@9 DO . PROG_STATEMENTS ENDWHILE

    $default  reduce using rule 4 (PROG_STATEMENTS)

    PROG_STATEMENTS  go to state 155


State 151

   42 ELSEIF_BLOCK: ELSEIF $@21 A_EXPN RB $@22 . PROG_STATEMENT

    COMMENT   shift, and go to state 11
    VAR_DECL  shift, and go to state 13
    WRITE     shift, and go to state 14
    READ      shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    GOTO      shift, and go to state 18
    REPEAT    shift, and go to state 19
    WHILE     shift, and go to state 20
    VAR       shift, and go to state 21

    PROG_STATEMENT  go to state 156
    IF_BLOCK        go to state 23


State 152

   13 PROG_STATEMENT: VAR_DECL VAR_LIST COLON ARRAY $@5 OF DATA_TYPE SC .

    $default  reduce using rule 13 (PROG_STATEMENT)


State 153

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL . $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    $default  reduce using rule 28 ($@15)

    $@15  go to state 157


State 154

   24 PROG_STATEMENT: REPEAT $@10 PROG_STATEMENTS UNTIL LB $@11 A_EXPN RB .

    $default  reduce using rule 24 (PROG_STATEMENT)


State 155

    3 PROG_STATEMENTS: PROG_STATEMENTS . PROG_STATEMENT
   21 PROG_STATEMENT: WHILE LB $@8 A_EXPN RB $@9 DO PROG_STATEMENTS . ENDWHILE

    COMMENT   shift, and go to state 11
    VAR_DECL  shift, and go to state 13
    WRITE     shift, and go to state 14
    READ      shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    GOTO      shift, and go to state 18
    REPEAT    shift, and go to state 19
    WHILE     shift, and go to state 20
    ENDWHILE  shift, and go to state 158
    VAR       shift, and go to state 21

    PROG_STATEMENT  go to state 22
    IF_BLOCK        go to state 23


State 156

   42 ELSEIF_BLOCK: ELSEIF $@21 A_EXPN RB $@22 PROG_STATEMENT .

    $default  reduce using rule 42 (ELSEIF_BLOCK)


State 157

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 . TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    TO  shift, and go to state 159


State 158

   21 PROG_STATEMENT: WHILE LB $@8 A_EXPN RB $@9 DO PROG_STATEMENTS ENDWHILE .

    $default  reduce using rule 21 (PROG_STATEMENT)


State 159

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO . $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    $default  reduce using rule 29 ($@16)

    $@16  go to state 160


State 160

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 . A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR

    NOT     shift, and go to state 66
    VAR     shift, and go to state 67
    NUMBER  shift, and go to state 68

    A_EXPN    go to state 161
    TERMINAL  go to state 70


State 161

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN . $@17 RB DO $@18 PROG_STATEMENTS ENDFOR
   61 A_EXPN: A_EXPN . PLUS $@27 A_EXPN
   63       | A_EXPN . MINUS $@28 A_EXPN
   65       | A_EXPN . MUL $@29 A_EXPN
   67       | A_EXPN . DIV $@30 A_EXPN
   69       | A_EXPN . MOD $@31 A_EXPN
   73       | A_EXPN . LAND $@33 A_EXPN
   75       | A_EXPN . LOR $@34 A_EXPN
   77       | A_EXPN . LEQ $@35 A_EXPN
   79       | A_EXPN . GEQ $@36 A_EXPN
   81       | A_EXPN . GT $@37 A_EXPN
   83       | A_EXPN . LT $@38 A_EXPN
   85       | A_EXPN . DEQ $@39 A_EXPN
   87       | A_EXPN . NEQ $@40 A_EXPN

    LAND   shift, and go to state 88
    LOR    shift, and go to state 89
    GEQ    shift, and go to state 90
    LEQ    shift, and go to state 91
    GT     shift, and go to state 92
    LT     shift, and go to state 93
    NEQ    shift, and go to state 94
    DEQ    shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MUL    shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 30 ($@17)

    $@17  go to state 162


State 162

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 . RB DO $@18 PROG_STATEMENTS ENDFOR

    RB  shift, and go to state 163


State 163

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB . DO $@18 PROG_STATEMENTS ENDFOR

    DO  shift, and go to state 164


State 164

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO . $@18 PROG_STATEMENTS ENDFOR

    $default  reduce using rule 31 ($@18)

    $@18  go to state 165


State 165

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 . PROG_STATEMENTS ENDFOR

    $default  reduce using rule 4 (PROG_STATEMENTS)

    PROG_STATEMENTS  go to state 166


State 166

    3 PROG_STATEMENTS: PROG_STATEMENTS . PROG_STATEMENT
   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS . ENDFOR

    COMMENT   shift, and go to state 11
    VAR_DECL  shift, and go to state 13
    WRITE     shift, and go to state 14
    READ      shift, and go to state 15
    FOR       shift, and go to state 16
    ENDFOR    shift, and go to state 167
    IF        shift, and go to state 17
    GOTO      shift, and go to state 18
    REPEAT    shift, and go to state 19
    WHILE     shift, and go to state 20
    VAR       shift, and go to state 21

    PROG_STATEMENT  go to state 22
    IF_BLOCK        go to state 23


State 167

   32 PROG_STATEMENT: FOR LB $@12 VAR $@13 ARROW $@14 TERMINAL $@15 TO $@16 A_EXPN $@17 RB DO $@18 PROG_STATEMENTS ENDFOR .

    $default  reduce using rule 32 (PROG_STATEMENT)
